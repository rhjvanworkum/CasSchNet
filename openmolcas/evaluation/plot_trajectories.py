import numpy as np
import matplotlib.pyplot as plt

def moving_average(a, n=3) :
    ret = np.cumsum(a, dtype=float)
    ret[n:] = ret[n:] - ret[:-n]
    return ret[n - 1:] / n

labels = ['ML_F_20', 'ML_F_50']

prev_geom = [14, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 8, 8, 8, 9, 9, 9,
9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 9, 9, 10, 9, 9, 9, 9, 9, 10, 9, 9, 9, 9, 9,
9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 15, 15, 16, 10, 9, 9, 10, 13, 15,
11, 10, 10, 11, 10, 10, 10, 10, 9, 9, 9, 9, 9, 10, 9, 9, 10, 10, 9, 9, 9, 9, 9, 9,
9, 9, 9, 9, 9, 10, 9, 12, 19, 12, 10, 13, 20, 18, 10, 10, 10, 9, 9, 9, 9, 9, 9, 10,
10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
10, 10, 10, 11, 11, 15, 10, 12, 11, 11, 11, 11, 12, 13, 15, 19, 11, 10, 10, 10, 11, 11, 10, 10,
10, 10, 10, 10, 10, 9, 9, 9]
standard = [25,21,18,18,15,14,17,17,18,18,15,19,29,18,15,22,14,16,15,16,16,19,20,17,18,22,28,30,36,18,18,18,18,18,18,17,18,19,19,20,16,16,19,17,20,30,17,16,18,15,14,16,18,19,18,19,27,17,16,18,18,18,18,15,15,14,16,16,18,15,15,17,19,20,17,21,18,18,18,18,17,19,17,20,57,31,19,19,19,22,35,31,22,24,26,27,23,21,22,22,18,20,19,19,19,19,19,19,19,19,18,18,19,19,19,19,19,19,15,19,15,15,15,17,16,17,16,16,22,27,30,28,36,17,18,16,18,16,17,19,20,22,19,24,19,14,17,19,18,17,17,17,17,17,17,17,17,17,17,18,18,17,17,17,15,16,16,16,17,18,24,25,25,57,25,24,26,26,30,38,38,38,39,27,26,24,22,22,42,31,42,21,20,17,20,15,15,16,15,17]
ML_F = [15, 15, 15, 13, 13, 13, 13, 15, 15, 16, 16, 16, 16, 17, 17, 17, 19, 20, 20, 16, 17, 17, 18, 17, 18, 19, 23, 21, 21, 24, 36, 30, 23, 28, 17, 16, 16, 17, 17, 16, 19, 23, 23, 29, 23, 19, 20, 23, 24, 22, 22, 22, 17, 16, 16, 19, 19, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 15, 18, 19, 18, 18, 18, 18, 17, 17, 16, 16, 16, 17, 17, 18, 18, 18, 15, 18, 15, 15, 18, 21, 19, 21, 25, 20, 38, 34, 26, 26, 32, 36, 27, 26, 24, 23, 21, 29, 24, 23, 30, 23, 26, 25, 29, 31, 27, 20, 18, 27, 28, 28, 17, 18, 16, 16, 16, 16, 14, 14, 18, 20, 18, 19, 17, 15, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 14, 15, 15, 18, 22, 20, 19, 18, 18, 17, 17, 26, 25, 28, 30, 30, 35, 35, 31, 33, 26, 34, 34, 27, 25, 29, 27, 25, 26, 33, 29, 22, 33, 23, 21, 35, 32, 21, 21, 27, 27, 29, 33, 31, 36, 32, 29]
ML_F_20 = [15, 15, 15, 13, 13, 13, 13, 15, 15, 16, 16, 16, 16, 17, 17, 17, 19, 20, 20, 16, 34, 29, 29, 31, 31, 27, 24, 24, 24, 27, 28, 29, 30, 28, 29, 30, 29, 31, 32, 29, 14, 16, 16, 16, 17, 17, 17, 18, 18, 18, 18, 18, 18, 17, 17, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 16, 15, 14, 13, 13, 13, 13, 13, 13, 15, 15, 15, 15, 16, 17, 17, 17, 16, 14, 20, 24, 25, 27, 32, 19, 21, 19, 19, 25, 17, 15, 17, 17, 17, 15, 15, 15, 16, 16, 15, 16, 16, 17, 17, 22, 22, 23, 21, 16, 16, 16, 17, 18, 17, 16, 22, 23, 16, 18, 16, 16, 26, 31, 25, 23, 48, 27, 25, 19, 26, 29, 27, 27, 23, 15, 17, 15, 15, 16, 19, 17, 17, 14, 17, 18, 17, 16, 16, 16, 17, 18, 18, 19, 16, 16, 17, 17, 18, 18, 19, 17, 16, 16, 16, 16, 16, 17, 21, 17, 18, 18, 18, 20, 17, 21, 21, 22, 19, 15, 18, 18, 19, 17, 18, 18, 18, 17, 17, 17, 17, 17, 18, 17, 16]
ML_F_50 = [15, 15, 15, 13, 13, 13, 13, 15, 15, 16, 16, 16, 16, 17, 17, 17, 19, 20, 20, 16, 17, 17, 18, 17, 18, 19, 23, 21, 21, 24, 36, 30, 23, 28, 17, 16, 16, 17, 17, 16, 19, 23, 23, 29, 23, 19, 20, 23, 24, 22, 16, 16, 16, 16, 16, 16, 16, 16, 16, 18, 19, 19, 19, 19, 16, 21, 24, 18, 16, 19, 18, 18, 18, 18, 17, 17, 17, 16, 16, 17, 18, 18, 18, 18, 18, 18, 16, 16, 18, 19, 25, 22, 44, 21, 26, 17, 17, 17, 18, 18, 15, 24, 22, 21, 23, 33, 32, 39, 40, 27, 39, 36, 25, 32, 33, 38, 31, 25, 25, 27, 23, 16, 19, 19, 18, 18, 17, 17, 17, 16, 18, 22, 22, 15, 15, 16, 15, 15, 15, 17, 17, 25, 24, 37, 26, 23, 19, 20, 20, 21, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 19, 16, 16, 17, 18, 21, 16, 16, 17, 17, 18, 21, 22, 20, 21, 31, 20, 21, 17, 16, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17, 16]


print(np.mean(np.array(prev_geom)), np.std(np.array(prev_geom)))
print(np.mean(np.array(standard)), np.std(np.array(standard)))
print(np.mean(np.array(ML_F)), np.std(np.array(ML_F)))
print(np.mean(np.array(ML_F_20)), np.std(np.array(ML_F_20)))
print(np.mean(np.array(ML_F_50)), np.std(np.array(ML_F_50)))


# for label, dat in zip(labels, data):
#   # values = moving_average(dat, n=5)
#   values = dat
#   plt.plot(range(len(values)), values, label=label)

# p = 50
# tot = 200

# fig, (ax1, ax2) = plt.subplots(2, gridspec_kw={'height_ratios': [3, 1]})

# ax1.plot(np.arange(tot), ML_F, label='ML_F')
# ax1.plot(np.arange(tot), ML_F_50, label='ML_F_50')
# for i in range(1, int(tot/p)):
#   ax1.axvline(x=i*p, linestyle='dashed')
# ax1.set(ylabel='N iterations')
# ax1.legend()

# green = [0, 0.8, 0]
# red = [0.8, 0, 0]

# diff = np.array(ML_F) - np.array(ML_F_50)
# colors = np.array([green if dif >= 0 else red for dif in diff])
# ax2.scatter(np.arange(tot), diff, c=colors, s=8)
# for i in range(1, int(tot/p)):
#   ax2.axvline(x=i*p, linestyle='dashed')
# ax2.set(xlabel='Timestep n', ylabel='N iterations')

# fig.suptitle('CASSCF iterations during MD trajectory of Fulvene')
# plt.show()